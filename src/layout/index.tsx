import Head from "next/head";
import { useEffect } from "react";
import { Comfortaa } from "next/font/google";
import Navbar from "../components/Navbar";
import { WALLET_NAME_KEY, useAppStore } from "~/store";
import ConnectWalletModal from "~/components/ConnectWalletModal";
import { useWallet } from "@meshsdk/react";
import { BrowserWallet } from "@meshsdk/core";
import SettingModal from "~/components/SettingModal";
import RewardsModal from "~/components/RewardsModal";
import DataSourcesModal from "~/components/DataSourcesModal";
import ProofModal from "~/components/ProofModal";

interface LayoutProps {
  children: React.ReactNode;
}

const comfortaa_font = Comfortaa({
  subsets: ["latin"],
});

const Layout: React.FC<LayoutProps> = ({
  children,
}: LayoutProps): React.ReactNode => {
  const {
    showConnectModal,
    showSettingModal,
    setConnectedWallet,
    showRewardModal,
    showDataSourcesModal,
    showProofsModal,
  } = useAppStore();
  const { connect } = useWallet();

  useEffect(() => {
    const prev_wallet = localStorage.getItem(WALLET_NAME_KEY);
    if (prev_wallet) {
      connect(prev_wallet)
        .then(() => {
          void (async () => {
            const wallet = await BrowserWallet.enable(prev_wallet);
            const address = (await wallet.getRewardAddresses())[0];
            // console.log(address);
            if (address) {
              setConnectedWallet({
                address: address,
              });
            }
          })();
        })
        .catch((e) => console.log(e));
    }
  }, []);
  return (
    <>
      <Head>
        <title>PADO</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
        <main
          className={`relative min-h-screen bg-[#ddfaf9] text-black dark:bg-black dark:text-white ${comfortaa_font.className}`}
        >
          <Navbar />
          {children}
          <>
            {showConnectModal && <ConnectWalletModal />}
            {showSettingModal && <SettingModal />}
            {showRewardModal && <RewardsModal />}
            {showDataSourcesModal && <DataSourcesModal />}
            {showProofsModal && <ProofModal />}
          </>
        </main>
    </>
  );
};

export default Layout;
